/*
	This simple state machine allows us to parse input text such as,
	32.4 99.2 99.2 vec3 "The vector is " . .

	into:
	[Number: 32.4] [Number: 99.2] [Number 99.2] [Symbol vec3] 
	[String "The vector is "] [Symbol .] [Symbol .] [END LINE]

	Number format: [-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?
*/


digraph ForthMachine
{
	start -> number_start [label="match +,-, [0-9], or ."];
	start -> inside_string [label="match \""];

subgraph number_match
{
	

	number_start -> inside_number [label="match [0-9], or ."];
	
	inside_number -> inside_number [label="match [0-9], or ."];

	inside_number -> exponent [label="match [eE]"];
	exponent -> plus_or_minus [label="match [+-]"];
	exponent -> exponent_digit [label="match [0-9]"];
	exponent -> fail [label="match space or EOL"];
	exponent_digit -> exponent_digit [label="match [0-9]"];
	exponent_digit -> number_finish [label="match space or EOL"];
}

subgraph string_match
{

	
	inside_string -> start_escape [label="match \\"]; 

	inside_string -> end_string [label="match \""];
 
	inside_string -> inside_string [label="match anything else"];

	start_escape -> escaped_char [label="match anything after \\"];

	escaped_char -> inside_string [label="match anything else"];

	end_string -> no_string [label="final \""];


}

	start [shape=box];

}
